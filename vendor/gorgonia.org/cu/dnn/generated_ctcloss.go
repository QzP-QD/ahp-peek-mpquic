package cudnn

/* Generated by gencudnn. DO NOT EDIT */

// #include <cudnn.h>
import "C"
import "runtime"

// CTCLoss is a representation of cudnnCTCLossDescriptor_t.
type CTCLoss struct {
	internal C.cudnnCTCLossDescriptor_t

	compType DataType
}

// NewCTCLoss creates a new CTCLoss.
func NewCTCLoss(compType DataType) (retVal *CTCLoss, err error) {
	var internal C.cudnnCTCLossDescriptor_t
	if err := result(C.cudnnCreateCTCLossDescriptor(&internal)); err != nil {
		return nil, err
	}

	if err := result(C.cudnnSetCTCLossDescriptor(internal, compType.C())); err != nil {
		return nil, err
	}

	retVal = &CTCLoss{
		internal: internal,
		compType: compType,
	}
	runtime.SetFinalizer(retVal, destroyCTCLoss)
	return retVal, nil
}

// CompType returns the internal compType.
func (c *CTCLoss) CompType() DataType { return c.compType }

func destroyCTCLoss(obj *CTCLoss) { C.cudnnDestroyCTCLossDescriptor(obj.internal) }
